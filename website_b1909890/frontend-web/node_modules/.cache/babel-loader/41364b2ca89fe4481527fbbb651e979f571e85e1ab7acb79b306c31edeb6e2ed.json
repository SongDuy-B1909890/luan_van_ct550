{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\LuanVan\\\\website\\\\frontend-web\\\\src\\\\components\\\\layout\\\\watch.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback } from 'react';\nimport ReactPlayer from 'react-player/lazy';\nimport { InView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchPage = () => {\n  _s();\n  const videos = [{\n    id: 1,\n    url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\"\n  }, {\n    id: 2,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 12,\n    url: \"https://www.youtube.com/watch?v=WSS6lnszkrc\"\n  }];\n  const videoRefs = useRef([]);\n  const [playingVideos, setPlayingVideos] = useState([]);\n  const handleVideoChange = useCallback(videoId => {\n    if (playingVideos.includes(videoId)) {\n      setPlayingVideos([]);\n    } else {\n      // Tạm dừng tất cả các video\n      const pausePromises = videoRefs.current.map(ref => {\n        if (ref.current && ref.current.dataset.id !== videoId && ref.current.getCurrentTime() > 0 && !ref.current.ended && !ref.current.paused) {\n          return ref.current.pause();\n        }\n        return Promise.resolve();\n      });\n      Promise.all(pausePromises).then(() => {\n        // Trở về điểm bắt đầu của tất cả các video\n        videoRefs.current.forEach(ref => {\n          if (ref.current && ref.current.dataset.id !== videoId) {\n            ref.current.seekTo(0);\n          }\n        });\n        // Phát video mới\n        setPlayingVideos([videoId]);\n      });\n    }\n  }, [playingVideos]);\n  const handleIntersection = useCallback(entries => {\n    if (Array.isArray(entries)) {\n      // Kiểm tra xem entries có phải là một mảng hay không\n      entries.forEach(entry => {\n        const videoId = entry.target.dataset.id;\n        const isPlaying = playingVideos.includes(videoId);\n        const videoRef = videoRefs.current.find(ref => ref.current.dataset.id === videoId);\n        if (entry.isIntersecting && entry.intersectionRatio >= 0.5 && !isPlaying) {\n          videoRef.seekTo(0);\n          videoRef.play();\n          setPlayingVideos(prevPlayingVideos => [...prevPlayingVideos, videoId]);\n        } else if ((!entry.isIntersecting || entry.intersectionRatio < 0.5) && isPlaying) {\n          videoRef.pause();\n          setPlayingVideos(prevPlayingVideos => prevPlayingVideos.filter(id => id !== videoId));\n        }\n      });\n    }\n  }, [playingVideos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-screen max-h-screen overflow-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center items-center mt-[60px]\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center mb-[45px] shadow-2xl rounded-2xl overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n          ref: ref => videoRefs.current[video.id - 1] = ref,\n          \"data-id\": video.id,\n          url: video.url,\n          playing: playingVideos.includes(video.id),\n          onPlay: () => handleVideoChange(video.id),\n          autoPlay: false,\n          width: \"960px\",\n          height: \"540px\",\n          controls: true,\n          allowFullScreen: true,\n          config: {\n            youtube: {\n              playerVars: {\n                showinfo: 1\n              }\n            }\n          },\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InView, {\n          as: \"div\",\n          rootMargin: \"-50% 0px\",\n          onChange: handleIntersection,\n          \"data-id\": video.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(WatchPage, \"ec5ZkoSH5LJ1WHp7tlqiaY3DLwc=\");\n_c = WatchPage;\nexport default WatchPage;\nvar _c;\n$RefreshReg$(_c, \"WatchPage\");","map":{"version":3,"names":["React","useRef","useState","useCallback","ReactPlayer","InView","jsxDEV","_jsxDEV","WatchPage","_s","videos","id","url","videoRefs","playingVideos","setPlayingVideos","handleVideoChange","videoId","includes","pausePromises","current","map","ref","dataset","getCurrentTime","ended","paused","pause","Promise","resolve","all","then","forEach","seekTo","handleIntersection","entries","Array","isArray","entry","target","isPlaying","videoRef","find","isIntersecting","intersectionRatio","play","prevPlayingVideos","filter","className","children","video","playing","onPlay","autoPlay","width","height","controls","allowFullScreen","config","youtube","playerVars","showinfo","loading","fileName","_jsxFileName","lineNumber","columnNumber","as","rootMargin","onChange","_c","$RefreshReg$"],"sources":["D:/Workspace/LuanVan/website/frontend-web/src/components/layout/watch.js"],"sourcesContent":["import React, { useRef, useState, useCallback } from 'react';\r\nimport ReactPlayer from 'react-player/lazy';\r\nimport { InView } from 'react-intersection-observer';\r\n\r\nconst WatchPage = () => {\r\n\r\n  \r\n  const videos = [\r\n    { \r\n      id: 1,\r\n      url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\r\n    },\r\n    { \r\n      id: 2,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    \r\n    { \r\n      id: 12,\r\n      url: \"https://www.youtube.com/watch?v=WSS6lnszkrc\",\r\n    },\r\n  ];\r\n  const videoRefs = useRef([]);\r\n  const [playingVideos, setPlayingVideos] = useState([]);\r\n  const handleVideoChange = useCallback((videoId) => {\r\n    if (playingVideos.includes(videoId)) {\r\n      setPlayingVideos([]);\r\n    } else {\r\n      // Tạm dừng tất cả các video\r\n      const pausePromises = videoRefs.current.map((ref) => {\r\n        if (ref.current && ref.current.dataset.id !== videoId && ref.current.getCurrentTime() > 0 && !ref.current.ended && !ref.current.paused) {\r\n          return ref.current.pause();\r\n        }\r\n        return Promise.resolve();\r\n      });\r\n      Promise.all(pausePromises).then(() => {\r\n        // Trở về điểm bắt đầu của tất cả các video\r\n        videoRefs.current.forEach((ref) => {\r\n          if (ref.current && ref.current.dataset.id !== videoId) {\r\n            ref.current.seekTo(0);\r\n          }\r\n        });\r\n        // Phát video mới\r\n        setPlayingVideos([videoId]);\r\n      });\r\n    }\r\n  }, [playingVideos]);\r\n\r\n  const handleIntersection = useCallback(\r\n    (entries) => {\r\n      if (Array.isArray(entries)) { // Kiểm tra xem entries có phải là một mảng hay không\r\n        entries.forEach((entry) => {\r\n          const videoId = entry.target.dataset.id;\r\n          const isPlaying = playingVideos.includes(videoId);\r\n          const videoRef = videoRefs.current.find(\r\n            (ref) => ref.current.dataset.id === videoId\r\n          );\r\n  \r\n          if (entry.isIntersecting && entry.intersectionRatio >= 0.5 && !isPlaying) {\r\n            videoRef.seekTo(0);\r\n            videoRef.play();\r\n            setPlayingVideos((prevPlayingVideos) => [\r\n              ...prevPlayingVideos,\r\n              videoId,\r\n            ]);\r\n          } else if ((!entry.isIntersecting || entry.intersectionRatio < 0.5) && isPlaying) {\r\n            videoRef.pause();\r\n            setPlayingVideos((prevPlayingVideos) =>\r\n              prevPlayingVideos.filter((id) => id !== videoId)\r\n            );\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [playingVideos]\r\n  );\r\n  return (\r\n    <div className=\"max-w-screen max-h-screen overflow-auto\">\r\n      <div className=\"flex flex-wrap justify-center items-center mt-[60px]\">\r\n        {videos.map((video) => (\r\n          <div\r\n            key={video.id}\r\n            className=\"flex justify-center items-center mb-[45px] shadow-2xl rounded-2xl overflow-hidden\"\r\n            \r\n          >\r\n            <ReactPlayer\r\n              ref={(ref) => (videoRefs.current[video.id - 1] = ref)}\r\n              data-id={video.id}\r\n              url={video.url}\r\n              playing={playingVideos.includes(video.id)}\r\n              onPlay={() => handleVideoChange(video.id)}\r\n              autoPlay={false}\r\n              width=\"960px\"\r\n              height=\"540px\"\r\n              controls\r\n              allowFullScreen={true}\r\n              config={{\r\n                youtube: {\r\n                  playerVars: { showinfo: 1 },\r\n                },\r\n              }}\r\n              loading=\"lazy\"\r\n            />\r\n            <InView\r\n              as=\"div\"\r\n              rootMargin=\"-50% 0px\"\r\n              onChange={handleIntersection}\r\n              data-id={video.id}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}