{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\LuanVan\\\\website\\\\frontend-web\\\\src\\\\components\\\\layout\\\\watch.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport ReactPlayer from 'react-player/lazy';\nimport { InView } from 'react-intersection-observer';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchPage = () => {\n  _s();\n  const [videos] = useState([{\n    id: 1,\n    url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\"\n  }, {\n    id: 2,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 3,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 4,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 5,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 6,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 7,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 8,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 9,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 12,\n    url: \"https://www.youtube.com/watch?v=WSS6lnszkrc\"\n  }]);\n  const {\n    id\n  } = useParams();\n  const videoRefs = useRef([]);\n  const [playingVideos, setPlayingVideos] = useState([]);\n  const [videoIds, setVideoIds] = useState(videos.map(video => video.id));\n  const [videoKey, setVideoKey] = useState(0); // Thêm biến state videoKey\n\n  useEffect(() => {\n    setVideoIds(videos.map(video => video.id));\n    setVideoKey(prevKey => prevKey + 1); // Tăng giá trị của videoKey mỗi khi danh sách thay đổi\n  }, [videos]);\n  useEffect(() => {\n    setVideoIds(videos.map(video => video.id));\n    setVideoKey(prevKey => prevKey + 1);\n    // Cập nhật danh sách video khi id video thay đổi\n  }, [id, videos]);\n  const handleVideoChange = useCallback(videoId => {\n    if (playingVideos.includes(videoId) || !videoIds.includes(videoId)) {\n      setPlayingVideos([]);\n    } else {\n      // Tạm dừng tất cả các video\n      const pausePromises = videoRefs.current.map(ref => {\n        if (ref.current && ref.current.dataset.id !== videoId && ref.current.getCurrentTime() > 0 && !ref.current.ended && !ref.current.paused) {\n          return ref.current.pause();\n        }\n        return Promise.resolve();\n      });\n      Promise.all(pausePromises).then(() => {\n        // Trở về điểm bắt đầu của tất cả các video\n        videoRefs.current.forEach(ref => {\n          if (ref.current && ref.current.dataset.id !== videoId) {\n            ref.current.seekTo(0);\n          }\n        });\n        // Phát video mới\n        setPlayingVideos([videoId]);\n      });\n    }\n  }, [playingVideos, videoIds]);\n  const handleIntersection = useCallback(entries => {\n    if (Array.isArray(entries)) {\n      entries.forEach(entry => {\n        const videoId = entry.target.dataset.id;\n        const isPlaying = playingVideos.includes(videoId);\n        const videoRef = videoRefs.current.find(ref => ref.current.dataset.id === videoId);\n        if (entry.isIntersecting && entry.intersectionRatio >= 0.5 && !isPlaying) {\n          videoRef.seekTo(0); // Đưa video về vị trí ban đầu\n          videoRef.getInternalPlayer().playVideo(); // Phát video\n          setPlayingVideos(prevPlayingVideos => [...prevPlayingVideos, videoId]);\n        } else if ((!entry.isIntersecting || entry.intersectionRatio < 0.5) && isPlaying) {\n          videoRef.getInternalPlayer().pauseVideo(); // Tạm dừng video\n          setPlayingVideos(prevPlayingVideos => prevPlayingVideos.filter(id => id !== videoId));\n        }\n      });\n    }\n  }, [playingVideos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-screen max-h-screen overflow-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center items-center mt-[105px]mb-[45px]\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center  shadow-2xl rounded-2xl overflow-hidden bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n          // Sử dụng key prop với giá trị duy nhất để tránh việc nhảy lên đầu trang\n          ref: ref => videoRefs.current[video.id - 1] = ref,\n          \"data-id\": video.id,\n          url: video.url,\n          playing: playingVideos.includes(video.id),\n          onPlay: () => handleVideoChange(video.id),\n          autoPlay: true,\n          width: \"960px\",\n          height: \"540px\",\n          controls: true,\n          allowFullScreen: true,\n          config: {\n            youtube: {\n              playerVars: {\n                showinfo: 1,\n                playsinline: 1\n              },\n              preload: \"auto\",\n              buffered: \"auto\"\n            }\n          },\n          loading: \"lazy\",\n          preload: \"true\",\n          buffered: \"auto\"\n        }, `${video.id}-${videoKey}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InView, {\n          as: \"div\",\n          rootMargin: \"-50% 0px\",\n          onChange: handleIntersection,\n          \"data-id\": `helo${video.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(WatchPage, \"LypwVZsHXszOi4usXatSqIpROeI=\", false, function () {\n  return [useParams];\n});\n_c = WatchPage;\nexport default WatchPage;\nvar _c;\n$RefreshReg$(_c, \"WatchPage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","ReactPlayer","InView","useParams","jsxDEV","_jsxDEV","WatchPage","_s","videos","id","url","videoRefs","playingVideos","setPlayingVideos","videoIds","setVideoIds","map","video","videoKey","setVideoKey","prevKey","handleVideoChange","videoId","includes","pausePromises","current","ref","dataset","getCurrentTime","ended","paused","pause","Promise","resolve","all","then","forEach","seekTo","handleIntersection","entries","Array","isArray","entry","target","isPlaying","videoRef","find","isIntersecting","intersectionRatio","getInternalPlayer","playVideo","prevPlayingVideos","pauseVideo","filter","className","children","playing","onPlay","autoPlay","width","height","controls","allowFullScreen","config","youtube","playerVars","showinfo","playsinline","preload","buffered","loading","fileName","_jsxFileName","lineNumber","columnNumber","as","rootMargin","onChange","_c","$RefreshReg$"],"sources":["D:/Workspace/LuanVan/website/frontend-web/src/components/layout/watch.js"],"sourcesContent":["import React, { useRef, useState,useEffect, useCallback } from 'react';\r\nimport ReactPlayer from 'react-player/lazy';\r\nimport { InView } from 'react-intersection-observer';\r\nimport { useParams } from 'react-router-dom';\r\nconst WatchPage = () => {\r\n  \r\n  const [videos] = useState([\r\n    { \r\n      id: 1,\r\n      url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\r\n    },\r\n    { \r\n      id: 2,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 3,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 4,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 5,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 6,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 7,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 8,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 9,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 12,\r\n      url: \"https://www.youtube.com/watch?v=WSS6lnszkrc\",\r\n    },\r\n  ]);\r\n  const { id } = useParams();\r\n  const videoRefs = useRef([]);\r\n  const [playingVideos, setPlayingVideos] = useState([]);\r\n  const [videoIds, setVideoIds] = useState(videos.map(video => video.id));\r\n  const [videoKey, setVideoKey] = useState(0); // Thêm biến state videoKey\r\n\r\n  useEffect(() => {\r\n    setVideoIds(videos.map(video => video.id));\r\n    setVideoKey(prevKey => prevKey + 1); // Tăng giá trị của videoKey mỗi khi danh sách thay đổi\r\n  }, [videos]);\r\n\r\n  useEffect(() => {\r\n    setVideoIds(videos.map(video => video.id));\r\n    setVideoKey(prevKey => prevKey + 1);\r\n    // Cập nhật danh sách video khi id video thay đổi\r\n  }, [id, videos]);\r\n  \r\n  const handleVideoChange = useCallback((videoId) => {\r\n    if (playingVideos.includes(videoId) || !videoIds.includes(videoId)) {\r\n      setPlayingVideos([]);\r\n    } else {\r\n      // Tạm dừng tất cả các video\r\n      const pausePromises = videoRefs.current.map((ref) => {\r\n        if (ref.current && ref.current.dataset.id !== videoId && ref.current.getCurrentTime() > 0 && !ref.current.ended && !ref.current.paused) {\r\n          return ref.current.pause();\r\n        }\r\n        return Promise.resolve();\r\n      });\r\n      Promise.all(pausePromises).then(() => {\r\n        // Trở về điểm bắt đầu của tất cả các video\r\n        videoRefs.current.forEach((ref) => {\r\n          if (ref.current && ref.current.dataset.id !== videoId) {\r\n            ref.current.seekTo(0);\r\n          }\r\n        });\r\n        // Phát video mới\r\n        setPlayingVideos([videoId]);\r\n      });\r\n    }\r\n  }, [playingVideos, videoIds]);\r\n\r\n  const handleIntersection = useCallback(\r\n    (entries) => {\r\n      if (Array.isArray(entries)) {\r\n        entries.forEach((entry) => {\r\n          const videoId = entry.target.dataset.id;\r\n          const isPlaying = playingVideos.includes(videoId);\r\n          const videoRef = videoRefs.current.find((ref) => ref.current.dataset.id === videoId);\r\n  \r\n          if (entry.isIntersecting && entry.intersectionRatio >= 0.5 && !isPlaying) {\r\n            videoRef.seekTo(0); // Đưa video về vị trí ban đầu\r\n            videoRef.getInternalPlayer().playVideo(); // Phát video\r\n            setPlayingVideos((prevPlayingVideos) => [...prevPlayingVideos, videoId]);\r\n          } else if ((!entry.isIntersecting || entry.intersectionRatio < 0.5) && isPlaying) {\r\n            videoRef.getInternalPlayer().pauseVideo(); // Tạm dừng video\r\n            setPlayingVideos((prevPlayingVideos) => prevPlayingVideos.filter((id) => id !== videoId));\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [playingVideos]\r\n  );\r\n\r\n  return (\r\n    <div className=\"max-w-screen max-h-screen overflow-auto \">\r\n      <div className=\"flex flex-wrap justify-center items-center mt-[105px]mb-[45px]\">\r\n        {videos.map((video) => (\r\n          <div\r\n            key={video.id}\r\n            className=\"flex justify-center items-center  shadow-2xl rounded-2xl overflow-hidden bg-white\"\r\n          >\r\n            <ReactPlayer\r\n              key={`${video.id}-${videoKey}`} // Sử dụng key prop với giá trị duy nhất để tránh việc nhảy lên đầu trang\r\n              ref={(ref) => (videoRefs.current[video.id - 1] = ref)}\r\n              data-id={video.id}\r\n              url={video.url}\r\n              playing={playingVideos.includes(video.id)}\r\n              onPlay={() => handleVideoChange(video.id)}\r\n              autoPlay={true}\r\n              width=\"960px\"\r\n              height=\"540px\"\r\n              controls\r\n              allowFullScreen={true}\r\n              config={{\r\n                youtube: {\r\n                  playerVars: { showinfo: 1, playsinline: 1 },\r\n                  preload: \"auto\",\r\n                  buffered: \"auto\",\r\n                },\r\n              }}\r\n              loading=\"lazy\"\r\n              preload=\"true\"\r\n              buffered= \"auto\"\r\n            />\r\n            <InView\r\n              as=\"div\"\r\n              rootMargin=\"-50% 0px\"\r\n              onChange={handleIntersection}\r\n              data-id={`helo${video.id}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}