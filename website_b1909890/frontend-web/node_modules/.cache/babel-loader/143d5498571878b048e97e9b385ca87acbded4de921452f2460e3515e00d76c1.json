{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\LuanVan\\\\website\\\\frontend-web\\\\src\\\\components\\\\layout\\\\watch.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport ReactPlayer from 'react-player/lazy';\nimport { InView } from 'react-intersection-observer';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchPage = () => {\n  _s();\n  const [videos] = useState([{\n    id: 1,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 2,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 3,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 4,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 5,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 6,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 7,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 8,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 9,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 12,\n    url: \"https://www.youtube.com/watch?v=WSS6lnszkrc\"\n  }]);\n  const {\n    id\n  } = useParams();\n  const videoRefs = useRef([]);\n  const [playingVideos, setPlayingVideos] = useState([]);\n  const [videoIds, setVideoIds] = useState(videos.map(video => video.id));\n  const [videoKey, setVideoKey] = useState(0);\n  const shuffleVideos = videos => {\n    for (let i = videos.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [videos[i], videos[j]] = [videos[j], videos[i]];\n    }\n    return videos;\n  };\n  const shuffledVideos = shuffleVideos(videos);\n  useEffect(() => {\n    setVideoIds(shuffledVideos.map(video => video.id));\n    setVideoKey(prevKey => prevKey + 1);\n  }, [shuffledVideos]);\n  useEffect(() => {\n    setVideoIds(shuffledVideos.map(video => video.id));\n    setVideoKey(prevKey => prevKey + 1);\n  }, [id, shuffledVideos]);\n  const handleVideoChange = useCallback(videoId => {\n    setPlayingVideos(prevVideos => [...prevVideos, videoId]);\n  }, []);\n  const handleIntersection = useCallback((inView, entry) => {\n    const videoId = parseInt(entry.target.getAttribute('data-video-id'));\n    if (inView) {\n      if (!playingVideos.includes(videoId)) {\n        // start playing video\n        handleVideoChange(videoId);\n      }\n    } else {\n      if (playingVideos.includes(videoId)) {\n        // pause video\n        setPlayingVideos(prevVideos => prevVideos.filter(id => id !== videoId));\n      }\n    }\n  }, [playingVideos, handleVideoChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: videoIds.map(id => /*#__PURE__*/_jsxDEV(InView, {\n      threshold: 0.5,\n      onChange: handleIntersection,\n      children: _ref => {\n        let {\n          inView,\n          ref\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-container\",\n          ref: ref,\n          \"data-video-id\": id,\n          children: playingVideos.includes(id) && /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            url: videos.find(video => video.id === id).url,\n            playing: true,\n            controls: true,\n            width: \"100%\",\n            height: \"100%\"\n          }, videoKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      }\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(WatchPage, \"3eJgxdjp3+VrGtfITlG354NS8BY=\", false, function () {\n  return [useParams];\n});\n_c = WatchPage;\nexport default WatchPage;\nvar _c;\n$RefreshReg$(_c, \"WatchPage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","ReactPlayer","InView","useParams","jsxDEV","_jsxDEV","WatchPage","_s","videos","id","url","videoRefs","playingVideos","setPlayingVideos","videoIds","setVideoIds","map","video","videoKey","setVideoKey","shuffleVideos","i","length","j","Math","floor","random","shuffledVideos","prevKey","handleVideoChange","videoId","prevVideos","handleIntersection","inView","entry","parseInt","target","getAttribute","includes","filter","children","threshold","onChange","_ref","ref","className","find","playing","controls","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Workspace/LuanVan/website/frontend-web/src/components/layout/watch.js"],"sourcesContent":["import React, { useRef, useState,useEffect, useCallback } from 'react';\r\nimport ReactPlayer from 'react-player/lazy';\r\nimport { InView } from 'react-intersection-observer';\r\nimport { useParams } from 'react-router-dom';\r\nconst WatchPage = () => {\r\n  \r\n  const [videos] = useState([\r\n    { \r\n      id: 1,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 2,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 3,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 4,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 5,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 6,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 7,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 8,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 9,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 12,\r\n      url: \"https://www.youtube.com/watch?v=WSS6lnszkrc\",\r\n    },\r\n  ]);\r\n  const { id } = useParams();\r\n  const videoRefs = useRef([]);\r\n  const [playingVideos, setPlayingVideos] = useState([]);\r\n  const [videoIds, setVideoIds] = useState(videos.map(video => video.id));\r\n  const [videoKey, setVideoKey] = useState(0);\r\n  \r\n  const shuffleVideos = (videos) => {\r\n    for (let i = videos.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [videos[i], videos[j]] = [videos[j], videos[i]];\r\n    }\r\n    return videos;\r\n  };\r\n\r\n  const shuffledVideos = shuffleVideos(videos);\r\n  \r\n  useEffect(() => {\r\n    setVideoIds(shuffledVideos.map(video => video.id));\r\n    setVideoKey(prevKey => prevKey + 1);\r\n  }, [shuffledVideos]);\r\n\r\n  useEffect(() => {\r\n    setVideoIds(shuffledVideos.map(video => video.id));\r\n    setVideoKey(prevKey => prevKey + 1);\r\n  }, [id, shuffledVideos]);\r\n  \r\n  const handleVideoChange = useCallback((videoId) => {\r\n    setPlayingVideos(prevVideos => [...prevVideos, videoId]);\r\n  }, []);\r\n\r\n  const handleIntersection = useCallback((inView, entry) => {\r\n    const videoId = parseInt(entry.target.getAttribute('data-video-id'));\r\n    if (inView) {\r\n      if (!playingVideos.includes(videoId)) {\r\n        // start playing video\r\n        handleVideoChange(videoId);\r\n      }\r\n    } else {\r\n      if (playingVideos.includes(videoId)) {\r\n        // pause video\r\n        setPlayingVideos(prevVideos => prevVideos.filter(id => id !== videoId));\r\n      }\r\n    }\r\n  }, [playingVideos, handleVideoChange]);\r\n\r\n  return (\r\n    <div>\r\n      {videoIds.map(id => (\r\n        <InView\r\n          key={id}\r\n          threshold={0.5}\r\n          onChange={handleIntersection}\r\n        >\r\n          {({ inView, ref }) => (\r\n            <div className=\"video-container\" ref={ref} data-video-id={id}>\r\n              {playingVideos.includes(id) && (\r\n                <ReactPlayer\r\n                  url={videos.find(video => video.id === id).url}\r\n                  playing={true}\r\n                  controls={true}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  key={videoKey}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </InView>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}