{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\LuanVan\\\\website\\\\frontend-web\\\\src\\\\components\\\\layout\\\\watch.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback } from 'react';\nimport ReactPlayer from 'react-player/lazy';\nimport { InView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchPage = () => {\n  _s();\n  const videoRefs = useRef([]);\n  const videos = [{\n    id: 1,\n    url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\"\n  }, {\n    id: 2,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 12,\n    url: \"https://www.youtube.com/watch?v=WSS6lnszkrc\"\n  }];\n  const [currentVideo, setCurrentVideo] = useState(null);\n  const handleVideoPlay = useCallback(videoId => {\n    if (currentVideo !== videoId) {\n      // Dừng video cũ\n      const currentVideoRef = videoRefs.current.find(ref => ref.current && ref.current.props.playing);\n      if (currentVideoRef) {\n        currentVideoRef.current.pause();\n      }\n      // Đặt currentVideo thành video mới\n      setCurrentVideo(videoId);\n    }\n  }, [currentVideo]);\n  const handleIntersection = useCallback(entries => {\n    if (Array.isArray(entries)) {\n      // Kiểm tra xem entries có phải là một mảng hay không\n      entries.forEach(entry => {\n        const videoId = entry.target.dataset.id;\n        const videoRef = videoRefs.current.find(ref => ref.current.dataset.id === videoId);\n        if (entry.isIntersecting && currentVideo !== videoId) {\n          videoRef.seekTo(0);\n          videoRef.play();\n          handleVideoPlay(videoId);\n        } else if (!entry.isIntersecting && currentVideo === videoId) {\n          videoRef.pause();\n          setCurrentVideo(null);\n        }\n      });\n    }\n  }, [currentVideo, handleVideoPlay]);\n  const shuffledVideos = videos.sort(() => Math.random() - 0.5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-screen max-h-screen overflow-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center items-center mt-[60px]\",\n      children: shuffledVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center mb-[45px] shadow-2xl rounded-2xl overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          ref: ref => videoRefs.current[video.id] = ref,\n          \"data-id\": video.id,\n          url: video.url,\n          playing: currentVideo === video.id,\n          onPlay: () => handleVideoPlay(video.id),\n          autoPlay: false,\n          width: \"960px\",\n          height: \"540px\",\n          controls: true,\n          allowFullScreen: true,\n          config: {\n            youtube: {\n              playerVars: {\n                showinfo: 1\n              }\n            }\n          },\n          loading: \"lazy\",\n          preload: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), videoRefs.current.length > 0 && /*#__PURE__*/_jsxDEV(InView, {\n      rootMargin: \"0px\",\n      threshold: 0.5,\n      onChange: handleIntersection,\n      children: shuffledVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-id\": video.id,\n        ref: ref => videoRefs.current[video.id] = ref\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n_s(WatchPage, \"0fZ90IvXERQYVzWZiX4ElOCqGzA=\");\n_c = WatchPage;\nexport default WatchPage;\nvar _c;\n$RefreshReg$(_c, \"WatchPage\");","map":{"version":3,"names":["React","useRef","useState","useCallback","ReactPlayer","InView","jsxDEV","_jsxDEV","WatchPage","_s","videoRefs","videos","id","url","currentVideo","setCurrentVideo","handleVideoPlay","videoId","currentVideoRef","current","find","ref","props","playing","pause","handleIntersection","entries","Array","isArray","forEach","entry","target","dataset","videoRef","isIntersecting","seekTo","play","shuffledVideos","sort","Math","random","className","children","map","video","onPlay","autoPlay","width","height","controls","allowFullScreen","config","youtube","playerVars","showinfo","loading","preload","fileName","_jsxFileName","lineNumber","columnNumber","length","rootMargin","threshold","onChange","_c","$RefreshReg$"],"sources":["D:/Workspace/LuanVan/website/frontend-web/src/components/layout/watch.js"],"sourcesContent":["import React, { useRef, useState, useCallback } from 'react';\r\nimport ReactPlayer from 'react-player/lazy';\r\nimport { InView } from 'react-intersection-observer';\r\n\r\nconst WatchPage = () => {\r\n\r\n  const videoRefs = useRef([]);\r\n  const videos = [\r\n    { \r\n      id: 1,\r\n      url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\r\n    },\r\n    { \r\n      id: 2,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 12,\r\n      url: \"https://www.youtube.com/watch?v=WSS6lnszkrc\",\r\n    },\r\n  ];\r\n\r\n  const [currentVideo, setCurrentVideo] = useState(null);\r\n\r\n  const handleVideoPlay = useCallback((videoId) => {\r\n    if (currentVideo !== videoId) {\r\n      // Dừng video cũ\r\n      const currentVideoRef = videoRefs.current.find(\r\n        (ref) => ref.current && ref.current.props.playing\r\n      );\r\n      if (currentVideoRef) {\r\n        currentVideoRef.current.pause();\r\n      }\r\n      // Đặt currentVideo thành video mới\r\n      setCurrentVideo(videoId);\r\n    }\r\n  }, [currentVideo]);\r\n\r\n  const handleIntersection = useCallback(\r\n    (entries) => {\r\n      if (Array.isArray(entries)) { // Kiểm tra xem entries có phải là một mảng hay không\r\n        entries.forEach((entry) => {\r\n          const videoId = entry.target.dataset.id;\r\n          const videoRef = videoRefs.current.find(\r\n            (ref) => ref.current.dataset.id === videoId\r\n          );\r\n  \r\n          if (entry.isIntersecting && currentVideo !== videoId) {\r\n            videoRef.seekTo(0);\r\n            videoRef.play();\r\n            handleVideoPlay(videoId);\r\n          } else if (!entry.isIntersecting && currentVideo === videoId) {\r\n            videoRef.pause();\r\n            setCurrentVideo(null);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [currentVideo, handleVideoPlay]\r\n  );\r\n  const shuffledVideos = videos.sort(() => Math.random() - 0.5);\r\n\r\nreturn (\r\n  <div className=\"max-w-screen max-h-screen overflow-auto\">\r\n    <div className=\"flex flex-wrap justify-center items-center mt-[60px]\">\r\n      {shuffledVideos.map((video) => (\r\n        <div\r\n          key={video.id}\r\n          className=\"flex justify-center items-center mb-[45px] shadow-2xl rounded-2xl overflow-hidden\"\r\n        >\r\n          <ReactPlayer\r\n            ref={(ref) => (videoRefs.current[video.id] = ref)}\r\n            data-id={video.id}\r\n            url={video.url}\r\n            playing={currentVideo === video.id}\r\n            onPlay={() => handleVideoPlay(video.id)}\r\n            autoPlay={false}\r\n            width=\"960px\"\r\n            height=\"540px\"\r\n            controls\r\n            allowFullScreen={true}\r\n            config={{\r\n              youtube: {\r\n                playerVars: { showinfo: 1 },\r\n              },\r\n            }}\r\n            loading=\"lazy\"\r\n            preload=\"true\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n    {videoRefs.current.length > 0 && (\r\n      <InView\r\n        rootMargin=\"0px\"\r\n        threshold={0.5}\r\n        onChange={handleIntersection}\r\n      >\r\n        {shuffledVideos.map((video) => (\r\n          <div\r\n            key={video.id}\r\n            data-id={video.id}\r\n            ref={(ref) => (videoRefs.current[video.id] = ref)}\r\n          />\r\n        ))}\r\n      </InView>\r\n    )}\r\n  </div>\r\n);\r\n        }\r\n\r\nexport default WatchPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}