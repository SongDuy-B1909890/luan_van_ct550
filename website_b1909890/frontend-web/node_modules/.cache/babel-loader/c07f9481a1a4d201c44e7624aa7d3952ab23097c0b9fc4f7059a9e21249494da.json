{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\LuanVan\\\\website\\\\frontend-web\\\\src\\\\components\\\\layout\\\\watch.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player/lazy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchPage = () => {\n  _s();\n  const videos = [{\n    id: 1,\n    url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\"\n  }, {\n    id: 2,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  },\n  // { \n  //   id: 3,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 4,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 5,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 6,\n  //   url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\n  // },\n  // { \n  //   id: 7,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 8,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 9,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 10,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 11,\n  //   url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\n  // },\n  {\n    id: 12,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }\n  // { \n  //   id: 13,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 14,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  // { \n  //   id: 15,\n  //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\n  // },\n  ];\n\n  // hàm xáo trộn danh sách video\n  const shuffleVideos = videos => {\n    for (let i = videos.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [videos[i], videos[j]] = [videos[j], videos[i]];\n    }\n    return videos;\n  };\n  const shuffledVideos = shuffleVideos(videos); // xáo trộn danh sách video\n\n  const videoRefs = useRef([]);\n  const [playingVideo, setPlayingVideo] = useState(null);\n  const [playingVideos, setPlayingVideos] = useState([]);\n  const handleError = error => {\n    console.log('An error occurred:', error);\n  };\n  const handleVideoChange = video => {\n    const videoId = video.id.toString();\n    if (playingVideos.includes(videoId)) {\n      setPlayingVideo(null);\n      setPlayingVideos([]);\n    } else {\n      setPlayingVideo(videoId);\n      setPlayingVideos([videoId]);\n    }\n  };\n  useEffect(() => {\n    setPlayingState(playingVideos, playingVideos, videoRefs);\n  }, [playingVideos]);\n  useEffect(() => {\n    // hàm kiểm tra xem video có đang nằm trong phạm vi màn hình hay không\n\n    const refs = videoRefs.current;\n    refs.forEach(ref => {\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n    });\n    return () => {\n      refs.forEach(ref => {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n      });\n    };\n  }, [playingVideos, videoRefs]);\n  const handleIntersection = entries => {\n    entries.forEach(entry => {\n      var _entry$target;\n      const videoId = (_entry$target = entry.target) === null || _entry$target === void 0 ? void 0 : _entry$target.getAttribute('data-id');\n      const isPlaying = playingVideos.includes(videoId);\n      const videoIndex = videoRefs.current.findIndex(ref => {\n        var _ref$current;\n        return ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getAttribute('data-id')) === videoId;\n      });\n      if (entry.isIntersecting && !isPlaying) {\n        const videoRef = videoRefs.current[videoIndex];\n        if (videoRef) {\n          videoRef.current.seekTo(0);\n          videoRef.current.play();\n        }\n        setPlayingVideos(prevPlayingVideos => setPlayingState([...prevPlayingVideos, videoId], prevPlayingVideos, videoRefs));\n      } else if (!entry.isIntersecting && isPlaying) {\n        const videoRef = videoRefs.current[videoIndex];\n        if (videoRef) {\n          videoRef.current.pause();\n        }\n        setPlayingVideos(prevPlayingVideos => setPlayingState(prevPlayingVideos.filter(id => id !== videoId), prevPlayingVideos, videoRefs));\n      }\n    });\n  };\n  const observer = new IntersectionObserver(handleIntersection, {\n    threshold: 0.5\n  });\n  useEffect(() => {\n    const newVideoIndex = videoRefs.current.length - 1;\n    const newVideoRef = videoRefs.current[newVideoIndex];\n    if (newVideoRef.current) {\n      observer.observe(newVideoRef.current);\n    }\n    return () => {\n      if (newVideoRef.current) {\n        observer.unobserve(newVideoRef.current);\n      }\n    };\n  }, [videoRefs.current]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-screen max-h-screen overflow-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center items-center mt-[60px]\",\n      children: shuffledVideos.map((video, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center mb-[45px] shadow-2xl rounded-2xl overflow-hidden\",\n        onClick: handleVideoChange,\n        children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n          // sử dụng giá trị video.id làm key\n          ref: ref => videoRefs.current[i] = ref,\n          \"data-id\": video.id,\n          url: video.url,\n          playing: playingVideo === video.id.toString(),\n          muted: true,\n          autoPlay: false,\n          onError: handleError,\n          width: \"960px\",\n          height: \"540px\",\n          controls: true,\n          allowFullScreen: true,\n          config: {\n            youtube: {\n              playerVars: {\n                showinfo: 1\n              }\n            }\n          },\n          onPlay: () => {\n            setPlayingVideos([video.id.toString()]);\n          },\n          onPause: () => {\n            setPlayingVideos([]);\n          },\n          loading: \"lazy\" // sử dụng lazy load\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), console.log(playingVideos)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(WatchPage, \"AC9zZ3BAVdtdyOCMqLBgEFd7Khs=\");\n_c = WatchPage;\nexport default WatchPage;\nvar _c;\n$RefreshReg$(_c, \"WatchPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","ReactPlayer","jsxDEV","_jsxDEV","WatchPage","_s","videos","id","url","shuffleVideos","i","length","j","Math","floor","random","shuffledVideos","videoRefs","playingVideo","setPlayingVideo","playingVideos","setPlayingVideos","handleError","error","console","log","handleVideoChange","video","videoId","toString","includes","setPlayingState","refs","current","forEach","ref","observer","observe","unobserve","handleIntersection","entries","entry","_entry$target","target","getAttribute","isPlaying","videoIndex","findIndex","_ref$current","isIntersecting","videoRef","seekTo","play","prevPlayingVideos","pause","filter","IntersectionObserver","threshold","newVideoIndex","newVideoRef","className","children","map","onClick","playing","muted","autoPlay","onError","width","height","controls","allowFullScreen","config","youtube","playerVars","showinfo","onPlay","onPause","loading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Workspace/LuanVan/website/frontend-web/src/components/layout/watch.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport ReactPlayer from 'react-player/lazy';\r\n\r\nconst WatchPage = () => {\r\n\r\n  const videos = [\r\n    { \r\n      id: 1,\r\n      url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\r\n    },\r\n    { \r\n      id: 2,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    // { \r\n    //   id: 3,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 4,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 5,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 6,\r\n    //   url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\r\n    // },\r\n    // { \r\n    //   id: 7,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 8,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 9,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 10,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 11,\r\n    //   url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\r\n    // },\r\n    { \r\n      id: 12,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    // { \r\n    //   id: 13,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 14,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n    // { \r\n    //   id: 15,\r\n    //   url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    // },\r\n   \r\n  ];\r\n\r\n  // hàm xáo trộn danh sách video\r\n  const shuffleVideos = (videos) => {\r\n    for (let i = videos.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [videos[i], videos[j]] = [videos[j], videos[i]];\r\n    }\r\n    return videos;\r\n  };\r\n\r\n  const shuffledVideos = shuffleVideos(videos); // xáo trộn danh sách video\r\n  \r\n  const videoRefs = useRef([]);\r\n  const [playingVideo, setPlayingVideo] = useState(null);\r\n  const [playingVideos, setPlayingVideos] = useState([]);\r\n  const handleError = (error) => {\r\n    console.log('An error occurred:', error);\r\n  };\r\n\r\n  const handleVideoChange = (video) => {\r\n    const videoId = video.id.toString();\r\n    if (playingVideos.includes(videoId)) {\r\n      setPlayingVideo(null);\r\n      setPlayingVideos([]);\r\n    } else {\r\n      setPlayingVideo(videoId);\r\n      setPlayingVideos([videoId]);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPlayingState(playingVideos, playingVideos, videoRefs);\r\n  }, [playingVideos]);\r\n  useEffect(() => {\r\n    // hàm kiểm tra xem video có đang nằm trong phạm vi màn hình hay không\r\n    \r\n    \r\n\r\n    \r\n    \r\n    const refs = videoRefs.current;\r\n    refs.forEach((ref) => {\r\n      if (ref.current) {\r\n        observer.observe(ref.current);\r\n      }\r\n    });\r\n  \r\n    return () => {\r\n      refs.forEach((ref) => {\r\n        if (ref.current) {\r\n          observer.unobserve(ref.current);\r\n        }\r\n      });\r\n    };\r\n  }, [playingVideos, videoRefs]);\r\n  const handleIntersection = (entries) => {\r\n      entries.forEach((entry) => {\r\n        const videoId = entry.target?.getAttribute('data-id');\r\n        const isPlaying = playingVideos.includes(videoId);\r\n        const videoIndex = videoRefs.current.findIndex((ref) => ref.current?.getAttribute('data-id') === videoId);\r\n    \r\n        if (entry.isIntersecting && !isPlaying) {\r\n          const videoRef = videoRefs.current[videoIndex];\r\n          if (videoRef) {\r\n            videoRef.current.seekTo(0);\r\n            videoRef.current.play();\r\n          }\r\n          setPlayingVideos((prevPlayingVideos) => setPlayingState([...prevPlayingVideos, videoId], prevPlayingVideos, videoRefs));\r\n        } else if (!entry.isIntersecting && isPlaying) {\r\n          const videoRef = videoRefs.current[videoIndex];\r\n          if (videoRef) {\r\n            videoRef.current.pause();\r\n          }\r\n          setPlayingVideos((prevPlayingVideos) => setPlayingState(prevPlayingVideos.filter((id) => id !== videoId), prevPlayingVideos, videoRefs));\r\n        }\r\n      });\r\n    };\r\nconst observer = new IntersectionObserver(handleIntersection, {\r\n      threshold: 0.5,\r\n    });\r\n  useEffect(() => {\r\n    const newVideoIndex = videoRefs.current.length - 1;\r\n    const newVideoRef = videoRefs.current[newVideoIndex];\r\n    if (newVideoRef.current) {\r\n      observer.observe(newVideoRef.current);\r\n    }\r\n    return () => {\r\n      if (newVideoRef.current) {\r\n        observer.unobserve(newVideoRef.current);\r\n      }\r\n    };\r\n  }, [videoRefs.current]);\r\n\r\n  return (\r\n    <div className=\"max-w-screen max-h-screen overflow-auto\">\r\n      <div className=\"flex flex-wrap justify-center items-center mt-[60px]\">\r\n        {shuffledVideos.map((video,i) => (\r\n          <div \r\n            key={video.id} \r\n            className=\"flex justify-center items-center mb-[45px] shadow-2xl rounded-2xl overflow-hidden\"\r\n            onClick={handleVideoChange}\r\n          >\r\n            <ReactPlayer\r\n              key={video.id} // sử dụng giá trị video.id làm key\r\n              ref={(ref) => videoRefs.current[i] = ref}\r\n              data-id={video.id}\r\n              url={video.url}\r\n              playing={playingVideo === video.id.toString()}\r\n              muted={true}\r\n              autoPlay={false}\r\n              onError={handleError}\r\n              width=\"960px\"\r\n              height=\"540px\"\r\n              controls\r\n              allowFullScreen={true}\r\n              config={{\r\n                youtube: {\r\n                  playerVars: { showinfo: 1 }\r\n                }\r\n              }}\r\n              onPlay={() => {\r\n                setPlayingVideos([video.id.toString()]);\r\n              }}\r\n              onPause={() => {\r\n                setPlayingVideos([]);\r\n              }}\r\n              loading=\"lazy\" // sử dụng lazy load\r\n            /> \r\n            {console.log(playingVideos)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAMC,MAAM,GAAG,CACb;IACEC,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE;EACP,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE;EACP,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IACED,EAAE,EAAE,EAAE;IACNC,GAAG,EAAE;EACP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CAED;;EAED;EACA,MAAMC,aAAa,GAAIH,MAAM,IAAK;IAChC,KAAK,IAAII,CAAC,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACJ,MAAM,CAACI,CAAC,CAAC,EAAEJ,MAAM,CAACM,CAAC,CAAC,CAAC,GAAG,CAACN,MAAM,CAACM,CAAC,CAAC,EAAEN,MAAM,CAACI,CAAC,CAAC,CAAC;IACjD;IACA,OAAOJ,MAAM;EACf,CAAC;EAED,MAAMU,cAAc,GAAGP,aAAa,CAACH,MAAM,CAAC,CAAC,CAAC;;EAE9C,MAAMW,SAAS,GAAGnB,MAAM,CAAC,EAAE,CAAC;EAC5B,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMsB,WAAW,GAAIC,KAAK,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,KAAK,CAAC;EAC1C,CAAC;EAED,MAAMG,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,OAAO,GAAGD,KAAK,CAACpB,EAAE,CAACsB,QAAQ,CAAC,CAAC;IACnC,IAAIT,aAAa,CAACU,QAAQ,CAACF,OAAO,CAAC,EAAE;MACnCT,eAAe,CAAC,IAAI,CAAC;MACrBE,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,MAAM;MACLF,eAAe,CAACS,OAAO,CAAC;MACxBP,gBAAgB,CAAC,CAACO,OAAO,CAAC,CAAC;IAC7B;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdgC,eAAe,CAACX,aAAa,EAAEA,aAAa,EAAEH,SAAS,CAAC;EAC1D,CAAC,EAAE,CAACG,aAAa,CAAC,CAAC;EACnBrB,SAAS,CAAC,MAAM;IACd;;IAMA,MAAMiC,IAAI,GAAGf,SAAS,CAACgB,OAAO;IAC9BD,IAAI,CAACE,OAAO,CAAEC,GAAG,IAAK;MACpB,IAAIA,GAAG,CAACF,OAAO,EAAE;QACfG,QAAQ,CAACC,OAAO,CAACF,GAAG,CAACF,OAAO,CAAC;MAC/B;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXD,IAAI,CAACE,OAAO,CAAEC,GAAG,IAAK;QACpB,IAAIA,GAAG,CAACF,OAAO,EAAE;UACfG,QAAQ,CAACE,SAAS,CAACH,GAAG,CAACF,OAAO,CAAC;QACjC;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACb,aAAa,EAAEH,SAAS,CAAC,CAAC;EAC9B,MAAMsB,kBAAkB,GAAIC,OAAO,IAAK;IACpCA,OAAO,CAACN,OAAO,CAAEO,KAAK,IAAK;MAAA,IAAAC,aAAA;MACzB,MAAMd,OAAO,IAAAc,aAAA,GAAGD,KAAK,CAACE,MAAM,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,YAAY,CAAC,SAAS,CAAC;MACrD,MAAMC,SAAS,GAAGzB,aAAa,CAACU,QAAQ,CAACF,OAAO,CAAC;MACjD,MAAMkB,UAAU,GAAG7B,SAAS,CAACgB,OAAO,CAACc,SAAS,CAAEZ,GAAG;QAAA,IAAAa,YAAA;QAAA,OAAK,EAAAA,YAAA,GAAAb,GAAG,CAACF,OAAO,cAAAe,YAAA,uBAAXA,YAAA,CAAaJ,YAAY,CAAC,SAAS,CAAC,MAAKhB,OAAO;MAAA,EAAC;MAEzG,IAAIa,KAAK,CAACQ,cAAc,IAAI,CAACJ,SAAS,EAAE;QACtC,MAAMK,QAAQ,GAAGjC,SAAS,CAACgB,OAAO,CAACa,UAAU,CAAC;QAC9C,IAAII,QAAQ,EAAE;UACZA,QAAQ,CAACjB,OAAO,CAACkB,MAAM,CAAC,CAAC,CAAC;UAC1BD,QAAQ,CAACjB,OAAO,CAACmB,IAAI,CAAC,CAAC;QACzB;QACA/B,gBAAgB,CAAEgC,iBAAiB,IAAKtB,eAAe,CAAC,CAAC,GAAGsB,iBAAiB,EAAEzB,OAAO,CAAC,EAAEyB,iBAAiB,EAAEpC,SAAS,CAAC,CAAC;MACzH,CAAC,MAAM,IAAI,CAACwB,KAAK,CAACQ,cAAc,IAAIJ,SAAS,EAAE;QAC7C,MAAMK,QAAQ,GAAGjC,SAAS,CAACgB,OAAO,CAACa,UAAU,CAAC;QAC9C,IAAII,QAAQ,EAAE;UACZA,QAAQ,CAACjB,OAAO,CAACqB,KAAK,CAAC,CAAC;QAC1B;QACAjC,gBAAgB,CAAEgC,iBAAiB,IAAKtB,eAAe,CAACsB,iBAAiB,CAACE,MAAM,CAAEhD,EAAE,IAAKA,EAAE,KAAKqB,OAAO,CAAC,EAAEyB,iBAAiB,EAAEpC,SAAS,CAAC,CAAC;MAC1I;IACF,CAAC,CAAC;EACJ,CAAC;EACL,MAAMmB,QAAQ,GAAG,IAAIoB,oBAAoB,CAACjB,kBAAkB,EAAE;IACxDkB,SAAS,EAAE;EACb,CAAC,CAAC;EACJ1D,SAAS,CAAC,MAAM;IACd,MAAM2D,aAAa,GAAGzC,SAAS,CAACgB,OAAO,CAACtB,MAAM,GAAG,CAAC;IAClD,MAAMgD,WAAW,GAAG1C,SAAS,CAACgB,OAAO,CAACyB,aAAa,CAAC;IACpD,IAAIC,WAAW,CAAC1B,OAAO,EAAE;MACvBG,QAAQ,CAACC,OAAO,CAACsB,WAAW,CAAC1B,OAAO,CAAC;IACvC;IACA,OAAO,MAAM;MACX,IAAI0B,WAAW,CAAC1B,OAAO,EAAE;QACvBG,QAAQ,CAACE,SAAS,CAACqB,WAAW,CAAC1B,OAAO,CAAC;MACzC;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,SAAS,CAACgB,OAAO,CAAC,CAAC;EAEvB,oBACE9B,OAAA;IAAKyD,SAAS,EAAC,yCAAyC;IAAAC,QAAA,eACtD1D,OAAA;MAAKyD,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClE7C,cAAc,CAAC8C,GAAG,CAAC,CAACnC,KAAK,EAACjB,CAAC,kBAC1BP,OAAA;QAEEyD,SAAS,EAAC,mFAAmF;QAC7FG,OAAO,EAAErC,iBAAkB;QAAAmC,QAAA,gBAE3B1D,OAAA,CAACF,WAAW;UACK;UACfkC,GAAG,EAAGA,GAAG,IAAKlB,SAAS,CAACgB,OAAO,CAACvB,CAAC,CAAC,GAAGyB,GAAI;UACzC,WAASR,KAAK,CAACpB,EAAG;UAClBC,GAAG,EAAEmB,KAAK,CAACnB,GAAI;UACfwD,OAAO,EAAE9C,YAAY,KAAKS,KAAK,CAACpB,EAAE,CAACsB,QAAQ,CAAC,CAAE;UAC9CoC,KAAK,EAAE,IAAK;UACZC,QAAQ,EAAE,KAAM;UAChBC,OAAO,EAAE7C,WAAY;UACrB8C,KAAK,EAAC,OAAO;UACbC,MAAM,EAAC,OAAO;UACdC,QAAQ;UACRC,eAAe,EAAE,IAAK;UACtBC,MAAM,EAAE;YACNC,OAAO,EAAE;cACPC,UAAU,EAAE;gBAAEC,QAAQ,EAAE;cAAE;YAC5B;UACF,CAAE;UACFC,MAAM,EAAEA,CAAA,KAAM;YACZvD,gBAAgB,CAAC,CAACM,KAAK,CAACpB,EAAE,CAACsB,QAAQ,CAAC,CAAC,CAAC,CAAC;UACzC,CAAE;UACFgD,OAAO,EAAEA,CAAA,KAAM;YACbxD,gBAAgB,CAAC,EAAE,CAAC;UACtB,CAAE;UACFyD,OAAO,EAAC,MAAM,CAAC;QAAA,GAvBVnD,KAAK,CAACpB,EAAE;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBd,CAAC,EACD1D,OAAO,CAACC,GAAG,CAACL,aAAa,CAAC;MAAA,GA9BtBO,KAAK,CAACpB,EAAE;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA+BV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7E,EAAA,CAvMID,SAAS;AAAA+E,EAAA,GAAT/E,SAAS;AAyMf,eAAeA,SAAS;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}