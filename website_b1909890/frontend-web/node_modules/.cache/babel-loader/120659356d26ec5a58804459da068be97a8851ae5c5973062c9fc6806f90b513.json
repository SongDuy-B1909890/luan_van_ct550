{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\LuanVan\\\\website\\\\frontend-web\\\\src\\\\components\\\\layout\\\\watch.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchPage = () => {\n  _s();\n  const videoRefs = useRef(Array(shuffledVideos.length).fill().map(() => /*#__PURE__*/React.createRef())); // refs cho các video\n  const [playingVideos, setPlayingVideos] = useState([]); // danh sách các video đang phát\n\n  const handleError = error => {\n    console.log('An error occurred:', error);\n  };\n  const videos = [{\n    id: 1,\n    url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\"\n  }, {\n    id: 2,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 3,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 4,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 5,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 6,\n    url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\"\n  }, {\n    id: 7,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 8,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 9,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }, {\n    id: 10,\n    url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\"\n  }];\n\n  // hàm xáo trộn danh sách video\n  // xáo trộn danh sách video\n\n  // hàm kiểm tra xem video có đang nằm trong phạm vi màn hình hay không\n  const handleIntersection = entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const videoId = entry.target.id;\n        setPlayingVideos(prevPlayingVideos => [...prevPlayingVideos, videoId]);\n      } else {\n        const videoId = entry.target.id;\n        setPlayingVideos(prevPlayingVideos => prevPlayingVideos.filter(id => id !== videoId));\n      }\n    });\n  };\n  useEffect(() => {\n    var _videoRefs$current;\n    // tạo một instance của Intersection Observer API\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 0.5 // nếu hơn 50% của video nằm trong phạm vi màn hình thì coi là video đang hiển thị trên màn hình\n    });\n    // Kiểm tra xem videoRefs.current đã được khởi tạo hay chưa\n    if ((_videoRefs$current = videoRefs.current) !== null && _videoRefs$current !== void 0 && _videoRefs$current.length) {\n      // Đăng ký observe cho từng phần tử DOM\n      videoRefs.current.forEach(videoRef => {\n        observer.observe(videoRef.current);\n      });\n    }\n    return () => {\n      observer.disconnect();\n    };\n  }, [videoRefs.current]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-screen max-h-screen overflow-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center items-center mt-[60px]\",\n      children: shuffledVideos.map((video, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center mb-[45px] shadow-2xl rounded-2xl overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          ref: ref => videoRefs.current[i] = ref // lưu ref của video\n          ,\n          \"data-id\": video.id // lưu id của video\n          ,\n          url: video.url,\n          playing: playingVideos.includes(video.id),\n          muted: false\n          //autoPlay={true}\n          ,\n          onError: handleError,\n          width: \"960px\",\n          height: \"540px\",\n          controls: true,\n          allowFullScreen: true,\n          config: {\n            youtube: {\n              playerVars: {\n                showinfo: 1\n              }\n            }\n          },\n          loading: \"lazy\" // sử dụng lazy load\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(WatchPage, \"u6q2Hq/RTcjaVKny57KrbNOaTTM=\");\n_c = WatchPage;\nexport default WatchPage;\nvar _c;\n$RefreshReg$(_c, \"WatchPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","ReactPlayer","jsxDEV","_jsxDEV","WatchPage","_s","videoRefs","Array","shuffledVideos","length","fill","map","createRef","playingVideos","setPlayingVideos","handleError","error","console","log","videos","id","url","handleIntersection","entries","forEach","entry","isIntersecting","videoId","target","prevPlayingVideos","filter","_videoRefs$current","observer","IntersectionObserver","threshold","current","videoRef","observe","disconnect","className","children","video","i","ref","playing","includes","muted","onError","width","height","controls","allowFullScreen","config","youtube","playerVars","showinfo","loading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Workspace/LuanVan/website/frontend-web/src/components/layout/watch.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst WatchPage = () => {\r\n\r\n  const videoRefs = useRef(Array(shuffledVideos.length).fill().map(() => React.createRef())); // refs cho các video\r\n  const [playingVideos, setPlayingVideos] = useState([]); // danh sách các video đang phát\r\n\r\n  const handleError = (error) => {\r\n    console.log('An error occurred:', error);\r\n  };\r\n\r\n  const videos = [\r\n    { \r\n      id: 1,\r\n      url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\r\n    },\r\n    { \r\n      id: 2,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 3,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 4,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 5,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 6,\r\n      url: \"https://www.youtube.com/watch?v=KxaX-eYPjQw\",\r\n    },\r\n    { \r\n      id: 7,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 8,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 9,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    },\r\n    { \r\n      id: 10,\r\n      url: \"https://www.youtube.com/watch?v=d1_JKFy_fIk\",\r\n    }\r\n   \r\n  ];\r\n\r\n  // hàm xáo trộn danh sách video\r\n  // xáo trộn danh sách video\r\n\r\n  // hàm kiểm tra xem video có đang nằm trong phạm vi màn hình hay không\r\n  const handleIntersection = (entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        const videoId = entry.target.id;\r\n        setPlayingVideos((prevPlayingVideos) => [...prevPlayingVideos, videoId]);\r\n      } else {\r\n        const videoId = entry.target.id;\r\n        setPlayingVideos((prevPlayingVideos) => prevPlayingVideos.filter((id) => id !== videoId));\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // tạo một instance của Intersection Observer API\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      threshold: 0.5, // nếu hơn 50% của video nằm trong phạm vi màn hình thì coi là video đang hiển thị trên màn hình\r\n    });\r\n    // Kiểm tra xem videoRefs.current đã được khởi tạo hay chưa\r\n    if (videoRefs.current?.length) {\r\n      // Đăng ký observe cho từng phần tử DOM\r\n      videoRefs.current.forEach((videoRef) => {\r\n        observer.observe(videoRef.current);\r\n      });\r\n    }\r\n  \r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [videoRefs.current]);\r\n\r\n  return (\r\n    <div className=\"max-w-screen max-h-screen overflow-auto\">\r\n      <div className=\"flex flex-wrap justify-center items-center mt-[60px]\">\r\n        {shuffledVideos.map((video, i) => (\r\n          <div key={video.id} className=\"flex justify-center items-center mb-[45px] shadow-2xl rounded-2xl overflow-hidden\">\r\n            <ReactPlayer\r\n              ref={(ref) => videoRefs.current[i] = ref} // lưu ref của video\r\n              data-id={video.id} // lưu id của video\r\n              url={video.url}\r\n              playing={playingVideos.includes(video.id)}\r\n              muted={false}\r\n              //autoPlay={true}\r\n              onError={handleError}\r\n              width=\"960px\"\r\n              height=\"540px\"\r\n              controls\r\n              allowFullScreen={true}\r\n              config={{\r\n                youtube: {\r\n                  playerVars: { showinfo: 1 }\r\n                }\r\n              }}\r\n              loading=\"lazy\" // sử dụng lazy load\r\n            /> \r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}